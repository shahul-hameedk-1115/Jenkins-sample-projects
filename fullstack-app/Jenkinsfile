pipeline {
    agent none  // No global agent, each stage runs in its own Docker container

    environment {
        BACKEND_IMAGE = "backend-java-app:latest"
        FRONTEND_IMAGE = "frontend-node-app:latest"
        MYSQL_IMAGE = "mysql-db:latest"
    }

    stages {
        stage('Checkout Code') {
            agent { docker { image 'alpine/git' } }
            steps {
                script {
                    // Cloning the repository from GitHub
                    sh 'git clone https://github.com/shahul-hameedk-1115/fullstack-app.git .'
                }
            }
        }

        stage('Build Backend (Java + Maven)') {
            agent { docker { image 'maven:3.8.5-openjdk-17' } }
            steps {
                dir('backend-java-app') {
                    // Build the backend app using Maven
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Frontend (Node.js)') {
            agent { docker { image 'node:18' } }
            steps {
                dir('frontend-node-app') {
                    // Install dependencies and build frontend app
                    sh 'npm install'
                }
            }
        }

        stage('Setup MySQL') {
            agent { docker { image 'mysql:8' } }
            steps {
                script {
                    // Run MySQL container with environment variables
                    sh 'docker run -d --name mysql-db -e MYSQL_ROOT_PASSWORD=password $MYSQL_IMAGE'
                }
            }
        }

        stage('Build Docker Images') {
            agent { docker { image 'docker:latest' } }
            steps {
                dir('backend-java-app') {
                    // Build backend Docker image
                    sh 'docker build -t $BACKEND_IMAGE .'
                }
                dir('frontend-node-app') {
                    // Build frontend Docker image
                    sh 'docker build -t $FRONTEND_IMAGE .'
                }
            }
        }
    }
}
